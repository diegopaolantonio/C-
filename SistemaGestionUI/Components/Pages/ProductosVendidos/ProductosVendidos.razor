@page "/productosvendidos"
@rendermode InteractiveServer
@inject ProductosVendidosService ProductosVendidosService
<h3>Producto Vendido</h3>

<div class="container">
  
  <div class="row">
    <table class="table table-striped table-hover">
      <thead>
        <tr>
          <th>Id</th>
          <th>Venta</th>
          <th>Producto.Id</th>
          <th>Producto.Descripcion</th>
          <th>Cantidad</th>
          <th></th>
        </tr>
      </thead>
      <tbody >
        @foreach (ProductoVendido productoVendido in productosVendidos)
        {
          <tr>
            <td>@productoVendido.Id</td>
            <td>@productoVendido.Venta.Id</td>
            <td>@productoVendido.Producto.Id</td>
            <td>@productoVendido.Producto.Descripcion</td>
            <td>@productoVendido.Cantidad</td>
            <td>
              <button @onclick="@(() => EliminarProductoVendido(productoVendido.Id))" class="btn btn-danger">
                Eliminar
              </button>
            </td>
          </tr>
        }
      </tbody>
    </table>
  </div>
</div>

@code {

    private List<ProductoVendido> productosVendidos = new List<ProductoVendido>();

    private string buscar = string.Empty;

    protected override async Task OnInitializedAsync()
    {
        productosVendidos = await ProductosVendidosService.GetProductoVendido();
    }

    private async Task EliminarProductoVendido(int id)
    {
        await ProductosVendidosService.DeleteProductoVendido(id);

        productosVendidos = await ProductosVendidosService.GetProductoVendido();
    }
}
