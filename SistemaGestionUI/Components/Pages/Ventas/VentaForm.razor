@inject NavigationManager NavigationManager
@inject UsuariosService UsuariosService
@inject ProductosService ProductosService
@inject VentasService VentasService
@inject LoginService LoginService

<EditForm Model="Venta" OnValidSubmit="SubmitVenta" FormName="venta-from">
    
        @foreach (var productoCantidad in productosCantidad)
        {
            <div class="form-group">
                <label for="cantidad">Ingresar cantidad de @productoCantidad.Producto.Descripcion - @productoCantidad.Producto.Categoria :</label>
            <InputNumber @bind-Value="productoCantidad.Cantidad" class="form-control" Min="0" Max="@productoCantidad.Producto.Stock" / />
            </div>
        }

       <button type="submit" class="btn btn-primary">Guardar</button>
 
</EditForm>


@code {
    [Parameter]
    public Venta Venta { get; set; }
    public IngresarVenta ingresarVenta = new IngresarVenta();

    public List<Producto> productos = [];
    public List<Login> loginList = [];
    Login? usuarioLoggeado = null;
    public List<ProductoCantidad> productosCantidad = new List<ProductoCantidad>();

    protected override async Task OnInitializedAsync()
    {
        loginList = await LoginService.GetLogin();

        foreach (Login login in loginList)
        {
            usuarioLoggeado = login;
        }

        ingresarVenta.UsuarioId = usuarioLoggeado.UsuarioId;
        productos = await ProductosService.GetProductos();
        productosCantidad = productos.Select(p => new ProductoCantidad
            {
                Producto = p,
                Cantidad = 0
            }).ToList();
    }

    private async Task SubmitVenta()
    {
        List<int> productosVenta = [];
        List<int> cantidadVenta = [];
        foreach (var productoCantidad in productosCantidad)
        {
            if(productoCantidad.Cantidad > 0)
            {
                productosVenta.Add(productoCantidad.Producto.Id);
                cantidadVenta.Add(productoCantidad.Cantidad);
            }
        }
        ingresarVenta.ProductoId = productosVenta;
        ingresarVenta.Cantidad = cantidadVenta;

        foreach (int cantidad in ingresarVenta.Cantidad)
        {   
            Console.WriteLine(cantidad.ToString());
        }
        await VentasService.InsertVenta(ingresarVenta);

        NavigationManager.NavigateTo("/ventas");
    }
}
